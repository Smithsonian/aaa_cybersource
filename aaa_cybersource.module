<?php

/**
 * @file
 * Primary module hooks for aaa_cybersource module.
 */

use \Drupal\Core\Form\FormStateInterface;
use Drupal\aaa_cybersource_payments\Entity\Payment;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_entity_type_insert().
 *
 * Link webform_submission to the payment entity.
 */
function aaa_cybersource_webform_submission_insert(WebformSubmissionInterface $entity) {
  if (!is_null($entity->getData()['payment_entity'])) {
    $payment = Payment::load($entity->getData()['payment_entity']);
    $payment->set('submission', $entity->id());
    $payment->save();
  }
}

/**
 * Implements hook_theme().
 */
function aaa_cybersource_theme($existing, $type, $theme, $path) {
  return [];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function aaa_cybersource_theme_suggestions_webform_confirmation(array $variables) {
  if ($variables['webform']->get('category') === 'Cybersource') {
    return ['webform_confirmation__cybersource__receipt'];
  }
}

/**
 * Implements hook_entity_update().
 *
 * Copy the Webform alias updater and add a '/receipt' route.
 */
function aaa_cybersource_webform_update($entity) {
  if ($entity->get('category') === 'Cybersource') {
    $page_submit_path = $entity->getSetting('page_submit_path');
    $default_page_base_path = \Drupal::config('webform.settings')->get('settings.default_page_base_path');

    if (empty($page_submit_path) && empty($default_page_base_path)) {
      return;
    }

    $path_base_alias = ($page_submit_path ?: $default_page_base_path . '/' . str_replace('_', '-', $entity->id()));
    $path_suffix = '/receipt';
    $path_source = '/webform/' . $entity->id() . $path_suffix;
    $path_alias = $path_base_alias . $path_suffix;
    $langcode = 'en';
    // $this->updatePath($path_source, $path_alias, 'en');
    $path_alias_storage = \Drupal::entityTypeManager()->getStorage('path_alias');

    // Check if the path alias is already setup.
    $path_aliases = $path_alias_storage->loadByProperties(['path' => $path_source, 'langcode' => $langcode]);
    if ($path_aliases) {
      /** @var \Drupal\path_alias\PathAliasInterface $path_alias */
      $path_alias_current = reset($path_aliases);
      if ($path_alias_current->getAlias() === $path_alias) {
        return;
      }
    }
    else {
      $path_alias_current = $path_alias_storage->create([
        'path' => $path_source,
        'langcode' => $langcode,
      ]);
    }

    $path_alias_current->setAlias($path_alias);
    $path_alias_current->save();
  }
}

/**
 * Implements_webform_submission_form_alter().
 */
function aaa_cybersource_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'aaa_cybersource/flex';
}
