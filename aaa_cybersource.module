<?php

/**
 * @file
 * Primary module hooks for aaa_cybersource module.
 */

use \Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\aaa_cybersource\Entity\Payment;
use Drupal\webform\WebformSubmissionInterface;
use Drupal\webform\Entity\Webform;

/**
 * Implements hook_theme().
 */
function aaa_cybersource_theme() {
  return [
    'payment' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for payment templates.
 *
 * Default template: payment.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the payment information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_payment(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_entity_type_insert().
 *
 * Link webform_submission to the payment entity.
 */
function aaa_cybersource_webform_submission_insert(WebformSubmissionInterface $entity) {
  if (!is_null($entity->getData()['payment_entity'])) {
    $payment = Payment::load($entity->getData()['payment_entity']);
    $payment->set('submission', $entity->id());
    $payment->save();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function aaa_cybersource_theme_suggestions_webform_confirmation(array $variables) {
  if ($variables['webform']->get('category') === 'Cybersource') {
    return ['webform_confirmation__cybersource__receipt'];
  }
}

/**
 * Implements hook_entity_insert().
 *
 * Copy the Webform alias updater and add a '/receipt' route.
 */
function aaa_cybersource_webform_insert($entity) {
  if ($entity->get('category') === 'Cybersource') {
    _add_receipt_alias($entity);
  }
}

/**
 * Implements hook_entity_update().
 *
 * Copy the Webform alias updater and add a '/receipt' route.
 */
function aaa_cybersource_webform_update($entity) {
  if ($entity->get('category') === 'Cybersource') {
    _add_receipt_alias($entity);
  }
}

/**
 * Implements_webform_submission_form_alter().
 */
function aaa_cybersource_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'aaa_cybersource/flex';
  $form['#attached']['drupalSettings']['aaa_cybersource']['webform'] = $form['#webform_id'];
}

/**
 * Adds an alias URL for the receipt page of cybersource forms.
 *
 * @param Webform $entity
 */
function _add_receipt_alias(Webform $entity) {
  $page_submit_path = $entity->getSetting('page_submit_path');
  $default_page_base_path = \Drupal::config('webform.settings')->get('settings.default_page_base_path');

  if (empty($page_submit_path) && empty($default_page_base_path)) {
    return;
  }

  $path_base_alias = ($page_submit_path ?: $default_page_base_path . '/' . str_replace('_', '-', $entity->id()));
  $path_suffix = '/receipt';
  $path_source = '/webform/' . $entity->id() . $path_suffix;
  $path_alias = $path_base_alias . $path_suffix;
  $langcode = 'en';
  // $this->updatePath($path_source, $path_alias, 'en');
  $path_alias_storage = \Drupal::entityTypeManager()->getStorage('path_alias');

  // Check if the path alias is already setup.
  $path_aliases = $path_alias_storage->loadByProperties(['path' => $path_source, 'langcode' => $langcode]);
  if ($path_aliases) {
    /** @var \Drupal\path_alias\PathAliasInterface $path_alias */
    $path_alias_current = reset($path_aliases);
    if ($path_alias_current->getAlias() === $path_alias) {
      return;
    }
  }
  else {
    $path_alias_current = $path_alias_storage->create([
      'path' => $path_source,
      'langcode' => $langcode,
    ]);
  }

  $path_alias_current->setAlias($path_alias);
  $path_alias_current->save();
}
